---
name: Build

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
    env:
      BUILD_TOOLS_PATH: C:\apps\build-tools\
    steps:
      - run: echo $env:BUILD_TOOLS_PATH | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        if: startsWith(matrix.os, 'windows')

      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install Build tools
        if: startsWith(matrix.os, 'windows')
        run: git clone https://git.anotherfoxguy.com/AnotherFoxGuy/build-tools.git %BUILD_TOOLS_PATH%
        shell: cmd

      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get -y install ninja-build \
            libsecret-1-dev \
            qt6-base-dev \
            qt6-webengine-dev \
            qt6-webview-dev \
            qtkeychain-qt6-dev \
            qt6-5compat-dev \
            qt6-l10n-tools

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Cache conan packages
        if: startsWith(matrix.os, 'windows')
        uses: actions/cache@v4
        with:
          key: conan-${{ runner.os }}-${{ hashFiles('conanfile.py') }}
          path: ~/.conan2/

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        if: startsWith(matrix.os, 'windows')
        with:
          cache: 'true'
          version: 6.7.3
          modules: qt5compat qtpositioning qtwebchannel qtwebengine qtwebview
          dir: "${{ github.workspace }}/qt/"

      - name: Configure (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          conan remote add ror-conan https://git.anotherfoxguy.com/api/packages/rorbot/conan -f
          cmake . -GNinja -DCMAKE_INSTALL_PREFIX=redist -DCMAKE_BUILD_TYPE=Release -Bbuild -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES="cmake/conan_provider.cmake"

      - name: Configure (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cmake . -GNinja -DCMAKE_INSTALL_PREFIX=redist -DCMAKE_BUILD_TYPE=Release -Bbuild

      - name: Install
        run: |
          cd build
          ninja install

      - name: Upload redist folder
        uses: actions/upload-artifact@v4
        with:
          name: diesel-${{ runner.os }}
          path: redist
